<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java多线程 on 古时的风筝</title><link>https://www.moonkite.cn/tag/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link><description>Recent content in Java多线程 on 古时的风筝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 11 Feb 2021 08:56:23 +0800</lastBuildDate><atom:link href="https://www.moonkite.cn/tag/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>synchronized 到底该不该用？</title><link>https://www.moonkite.cn/category/java/Synchronized/</link><pubDate>Thu, 11 Feb 2021 08:56:23 +0800</pubDate><guid>https://www.moonkite.cn/category/java/Synchronized/</guid><description>在多线程环境中，锁的使用是避免不了的，使用锁时候有多种锁供我们选择，比如 ReentrantLock、CountDownLatch等等，但是作</description></item><item><title>类锁和对象锁到底有什么区别</title><link>https://www.moonkite.cn/category/java/%E7%B1%BB%E9%94%81%E5%92%8C%E5%AF%B9%E8%B1%A1%E9%94%81%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link><pubDate>Thu, 13 Aug 2020 08:56:23 +0800</pubDate><guid>https://www.moonkite.cn/category/java/%E7%B1%BB%E9%94%81%E5%92%8C%E5%AF%B9%E8%B1%A1%E9%94%81%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid><description>有锁才有自由 生活中不存在绝对的自由，绝对的自由通常对应的无序和混沌，只有在道德、法律、伦理的约束下的相对自由，才能使人感受到自由。 而在多线程</description></item><item><title>Java 调式、热部署、JVM 背后的支持者 Java Agent</title><link>https://www.moonkite.cn/category/java/Java-%E8%B0%83%E5%BC%8F%E7%83%AD%E9%83%A8%E7%BD%B2JVM-%E8%83%8C%E5%90%8E%E7%9A%84%E6%94%AF%E6%8C%81%E8%80%85-Java-Agent/</link><pubDate>Wed, 11 Sep 2019 08:56:23 +0800</pubDate><guid>https://www.moonkite.cn/category/java/Java-%E8%B0%83%E5%BC%8F%E7%83%AD%E9%83%A8%E7%BD%B2JVM-%E8%83%8C%E5%90%8E%E7%9A%84%E6%94%AF%E6%8C%81%E8%80%85-Java-Agent/</guid><description>我们平时写 Java Agent 的机会确实不多，也可以说几乎用不着。但其实我们一直在用它，而且接触的机会非常多。下面这些技术都使用了 Java Agent 技术，看一下你就知道为</description></item><item><title>Java 开发， volatile 你必须了解一下</title><link>https://www.moonkite.cn/category/java/Java-%E5%BC%80%E5%8F%91-volatile-%E4%BD%A0%E5%BF%85%E9%A1%BB%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/</link><pubDate>Wed, 02 May 2018 08:56:23 +0800</pubDate><guid>https://www.moonkite.cn/category/java/Java-%E5%BC%80%E5%8F%91-volatile-%E4%BD%A0%E5%BF%85%E9%A1%BB%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/</guid><description>上一篇文章说了 CAS 原理，其中说到了 Atomic* 类，他们实现原子操作的机制就依靠了 volatile 的内存可见性特性。如果还不了解 CAS 和 Atomic*，建议看一下我们说的 CAS</description></item></channel></rss>